{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","setUser","setSelectedTodoId","handleChangeUser","selectedUserId","selectedTodoId","userId","user","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","searchQueryTodo","handleFilterTodos","setFilteredTodos","useState","searchQuery","setSearchQuery","onChange","e","target","value","placeholder","newlistTodo","filter","toLowerCase","includes","trim","length","style","pointerEvents","Loader","TodoModal","selectedTodo","find","name","email","phone","href","App","React","memo","originalTodos","setOriginalTodos","filteredTodos","setSearchQueryTodo","loaded","setLoaded","useEffect","result","filterType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fdde9c7.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Todos = {\n  todos: Todo[];\n  setUser: React.Dispatch<React.SetStateAction<User>>,\n  setSelectedTodoId: React.Dispatch<React.SetStateAction<number | null>>\n};\n\nexport const TodoList: React.FC<Todos> = ({\n  todos, setUser, setSelectedTodoId,\n}) => {\n  const handleChangeUser = (selectedUserId: number, selectedTodoId: number) => {\n    setSelectedTodoId(selectedTodoId);\n    getUser(selectedUserId)\n      .then((user) => {\n        setUser({ ...user });\n      });\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"todo\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': todo.completed === false,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleChangeUser(todo.userId, todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  searchQueryTodo: Todo[],\n  handleFilterTodos: (filterType: string) => void,\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchQueryTodo, handleFilterTodos, setFilteredTodos,\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setSearchQuery(e.target.value);\n\n    const newlistTodo = searchQueryTodo.filter(todo => todo.title\n      .toLowerCase().includes(e.target.value.trim().toLowerCase()));\n\n    setFilteredTodos(newlistTodo);\n  };\n\n  const handleClearSearch = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(\n              e: React.ChangeEvent<HTMLSelectElement>,\n            ) => handleFilterTodos(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {searchQuery.trim().length !== 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User,\n  setUser: React.Dispatch<React.SetStateAction<User>>\n\n  todos: Todo[],\n\n  selectedTodoId: number | null\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user, setUser, todos, selectedTodoId,\n}) => {\n  const handleDeleteUser = () => {\n    setUser({\n      id: 0,\n      name: '',\n      email: '',\n      phone: '',\n    });\n  };\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId) || null;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleDeleteUser()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-success': selectedTodo?.completed,\n                'has-text-danger': selectedTodo?.completed === false,\n              })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = React.memo(() => {\n  const [originalTodos, setOriginalTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [searchQueryTodo, setSearchQueryTodo] = useState<Todo[]>([]);\n  const [user, setUser] = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    getTodos().then(result => {\n      setOriginalTodos(result);\n      setFilteredTodos(result);\n      setLoaded(true);\n    });\n  }, []);\n\n  const handleFilterTodos = (filterType: string) => {\n    switch (filterType) {\n      case 'active':\n        setFilteredTodos(originalTodos.filter(todo => !todo.completed));\n        setSearchQueryTodo(originalTodos.filter(todo => !todo.completed));\n        break;\n      case 'completed':\n        setFilteredTodos(originalTodos.filter(todo => todo.completed));\n        setSearchQueryTodo(originalTodos.filter(todo => todo.completed));\n        break;\n      default:\n        setFilteredTodos(originalTodos);\n        setSearchQueryTodo(originalTodos);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter searchQueryTodo={searchQueryTodo} handleFilterTodos={handleFilterTodos} setFilteredTodos={setFilteredTodos} />\n            </div>\n\n            <div className=\"block\">\n              {!loaded && <Loader />}\n              <TodoList todos={filteredTodos} setUser={setUser} setSelectedTodoId={setSelectedTodoId} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {user.id !== 0\n        ? <TodoModal user={user} todos={filteredTodos} setUser={setUser} selectedTodoId={selectedTodoId} /> : ''}\n    </>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}